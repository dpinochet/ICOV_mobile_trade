{"version":3,"sources":["webpack:///src/app/pages/reset-password/reset-password-routing.module.ts","webpack:///src/app/pages/reset-password/reset-password.module.ts","webpack:///src/app/pages/reset-password/reset-password.page.ts","webpack:///src/app/pages/reset-password/reset-password.page.scss","webpack:///src/app/pages/reset-password/reset-password.page.html"],"names":["routes","path","component","ResetPasswordPage","ResetPasswordPageRoutingModule","NgModule","imports","RouterModule","exports","ResetPasswordPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","NgxErrorsModule","declarations","navCtrl","userService","fb","toastCtrl","route","user_token","user_uid","form_password","group","password","Validators","confirmPass","validator","checkIfMatchingPasswords","form","email","passwordKey","passwordConfirmationKey","passwordInput","controls","passwordConfirmationInput","value","setErrors","notEquivalent","console","log","form_data","FormData","append","reset_password","subscribe","data","tostFound","token","uid","error","confirm_password","navigateByUrl","new_password2","JSON","stringify","msg","create","message","buttons","text","role","handler","toast","present","NavController","UserServicesService","FormBuilder","ToastController","Router","Component","selector","template"],"mappings":"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","file":"src_app_pages_reset-password_reset-password_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { NgxErrorsModule } from '@hackages/ngxerrors';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule,\n    ReactiveFormsModule,\n    NgxErrorsModule\n    \n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { UserServicesService } from 'src/app/services/user-services.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit {\n\n\n\n  ngOnInit() {\n  }\n\n  form: FormGroup;\n  form_password: FormGroup;\n  user_token: string = 'null';\n  user_uid: string = 'null';\n\n  constructor(public navCtrl: NavController,\n    private userService: UserServicesService,\n    fb: FormBuilder,\n    public toastCtrl: ToastController,\n    private route :Router\n\n  ) {\n\n\n    this.form_password = fb.group({\n      // email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(8)])],\n      confirmPass: ['', Validators.compose([Validators.required, Validators.minLength(8)])]\n    }, { validator: this.checkIfMatchingPasswords('password', 'confirmPass') });\n\n    this.form = fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n    }, );\n  }\n\n  checkIfMatchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordKey],\n        passwordConfirmationInput = group.controls[passwordConfirmationKey];\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        return passwordConfirmationInput.setErrors({ notEquivalent: true })\n      }\n      else {\n        return passwordConfirmationInput.setErrors(null);\n      }\n    }\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ResetPasswordPage');\n  }\n\n  resetPassword() {\n    let form = this.form.value;\n    let form_data = new FormData;\n    form_data.append('email', form.email);\n\n    this.userService.reset_password(form_data).subscribe(\n      data => {\n        /*let toast = this.toastCtrl.create({\n          message: 'Tu email es v치lido, cambia tu contrase침a',\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        });\n        toast.present();*/\n        this.tostFound('Tu correo es v치lido, cambia tu contrase침a');\n        this.user_token = data.token;\n        this.user_uid = data.uid;\n\n      },\n      error => {\n       /* let toast = this.toastCtrl.create({\n          message: 'Tu email es no se encuentra registrado',\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        });\n        toast.present();*/\n        this.tostFound('Tu correo es no se encuentra registrado');\n        console.log(error);\n      }\n    )\n  }\n\n  confirmPassword() {\n    let uid = this.user_uid;\n    let token = this.user_token;\n\n    let form = this.form_password.value;\n    let form_data = new FormData;\n    form_data.append('new_password1', form.password);\n    form_data.append('new_password2', form.confirmPass);\n    form_data.append('token', token);\n    form_data.append('uid', uid);\n    // form_data.append('email', form.email);\n\n    this.userService.confirm_password(form_data, uid, token).subscribe(\n      data => {\n        /*let toast = this.toastCtrl.create({\n          message: 'Has cambiado correctamente tu contrase침a!',\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        });\n        toast.present();*/\n        this.tostFound('춰Has cambiado correctamente tu contrase침a!');\n        //this.navCtrl.push(LoginPage);\n        this.route.navigateByUrl('login');\n      },\n      error => {\n        /*let toast = this.toastCtrl.create({\n          message: error.new_password2,\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        });\n        toast.present();*/\n        this.tostFound(error.new_password2);\n        console.log(JSON.stringify(error));\n      }\n    )\n\n  }\n\n  async tostFound(msg)\n  {\n    let toast = await this.toastCtrl.create({\n      message:msg,\n      buttons: [\n         {\n          text: 'OK',\n          role: 'OK',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        }\n      ]\n    });\n    await toast.present();\n  }\n\n\n\n}\n","export default \"page-reset-password .reset_pass_img {\\n  position: relative;\\n  left: 29%;\\n}\\npage-reset-password img {\\n  height: 170px;\\n  width: 170px;\\n}\\npage-reset-password button {\\n  margin-top: 24px;\\n  margin-bottom: 8px;\\n}\\npage-reset-password a {\\n  margin: 8px;\\n  text-decoration: none;\\n}\\npage-reset-password p {\\n  color: #337ab7;\\n  margin: 8px;\\n}\\npage-reset-password label {\\n  display: block;\\n}\\npage-reset-password #hereSpan {\\n  color: #FF6702;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2V0LXBhc3N3b3JkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNFLGtCQUFBO0VBQ0EsU0FBQTtBQUROO0FBS0k7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUhSO0FBS0k7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0FBSFI7QUFVSTtFQUNJLFdBQUE7RUFDQSxxQkFBQTtBQVJSO0FBVUk7RUFDSSxjQUFBO0VBQ0EsV0FBQTtBQVJSO0FBV0k7RUFDSSxjQUFBO0FBVFI7QUFXSTtFQUNJLGNBQUE7QUFUUiIsImZpbGUiOiJyZXNldC1wYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwYWdlLXJlc2V0LXBhc3N3b3JkIHtcblxuICAgIC5yZXNldF9wYXNzX2ltZ3tcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGxlZnQ6MjklXG4gICAgfVxuICBcbiAgXG4gICAgaW1nIHtcbiAgICAgICAgaGVpZ2h0OiAxNzBweDtcbiAgICAgICAgd2lkdGg6IDE3MHB4O1xuICAgIH1cbiAgICBidXR0b24ge1xuICAgICAgICBtYXJnaW4tdG9wOiAyNHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgfVxuICAgIGlvbi1pY29uIHtcbiAgICAgICAgLy8gZm9udC1zaXplOiAyLjVlbTtcbiAgICAgICAgLy8gbWFyZ2luLXRvcDogOHB4O1xuICAgICAgICAvLyBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgfVxuICAgIGEge1xuICAgICAgICBtYXJnaW46IDhweDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbiAgICBwIHtcbiAgICAgICAgY29sb3I6ICMzMzdhYjc7XG4gICAgICAgIG1hcmdpbjogOHB4O1xuICBcbiAgICB9XG4gICAgbGFiZWwge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgI2hlcmVTcGFuIHtcbiAgICAgICAgY29sb3I6ICNGRjY3MDI7XG4gICAgfVxuICB9XG4gICJdfQ== */\";","export default \"<!--\\n  Generated template for the ResetPasswordPage page.\\n\\n  See http://ionicframework.com/docs/components/#navigation for more info on\\n  Ionic pages and navigation.\\n-->\\n\\n\\n<ion-header no-border>\\n  <ion-toolbar color='violet'>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Recuperar contrase침a</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  \\n  <!-- <ion-content padding id=\\\"loginCont\\\"> -->\\n  <!-- <img src=\\\"assets/imgs/RedReparto512.png\\\" alt=\\\"\\\" class=\\\"reset_pass_img\\\"> -->\\n\\n  <!-- <ion-card-header color=\\\"primary\\\">Trade App</ion-card-header/> -->\\n  <!-- <p>TOKEN: {{user_token}}</p> -->\\n  <div *ngIf=\\\"user_token == 'null'\\\">\\n    <div style=\\\"text-align: center;\\\">\\n        <img  src=\\\"../../../assets/imgs/trade.png\\\" alt=\\\"\\\" >\\n        <br/><br/><br/><br/><br/>\\n      <form (ngSubmit)=\\\"resetPassword()\\\" [formGroup]=\\\"form\\\">\\n        <ion-list>\\n          <ion-item>\\n            <ion-label floating color=\\\"primary\\\">\\n              <ion-icon color=\\\"violet\\\" name=\\\"mail\\\"></ion-icon> Correo\\n            </ion-label>\\n            <ion-input type=\\\"email\\\" name=\\\"email\\\" required maxlength=\\\"50\\\" formControlName=\\\"email\\\"></ion-input>\\n          </ion-item>\\n        </ion-list>\\n        <div style=\\\"text-align: center;\\\">\\n          <ion-button color=\\\"violet\\\" full type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Comprobar Correo</ion-button>\\n        </div>\\n      </form>\\n      \\n    </div>\\n \\n  </div>\\n\\n  <div *ngIf=\\\"user_token != 'null'\\\">\\n    <div center>\\n      <form (ngSubmit)=\\\"confirmPassword()\\\" [formGroup]=\\\"form_password\\\">\\n        <ion-list>\\n  \\n          <!-- Pass input -->\\n          <ion-item [ngClass]=\\\"{ invalid: passwordErrors.hasError('*', ['touched']) }\\\">\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n            <ion-label floating color=\\\"primary\\\" style=\\\"font-size: 14px;\\\">\\n              <ion-icon color=\\\"violet\\\" name=\\\"finger-print\\\"></ion-icon> Contrase침a\\n            </ion-label>\\n          </ion-item>\\n          <div ngxErrors=\\\"password\\\" #passwordErrors=\\\"ngxErrors\\\">\\n            <div [ngxError]=\\\"['minlength', 'required']\\\" [when]=\\\"['touched']\\\">Debe contener m칤nimo 6 car치cteres</div>\\n          </div>\\n  \\n          <!-- Pass confirm input -->\\n          <ion-item [ngClass]=\\\"{ invalid: confirmPassErrors.hasError('*', ['touched']) }\\\">\\n            <ion-input type=\\\"password\\\" formControlName=\\\"confirmPass\\\"></ion-input>\\n            <ion-label floating color=\\\"primary\\\" style=\\\"font-size: 14px;\\\">\\n              <ion-icon color=\\\"violet\\\" name=\\\"finger-print\\\"></ion-icon> Confirmaci칩n Contrase침a\\n            </ion-label>\\n          </ion-item>\\n          <div ngxErrors=\\\"confirmPass\\\" #confirmPassErrors=\\\"ngxErrors\\\">\\n            <div [ngxError]=\\\"['notEquivalent']\\\" [when]=\\\"['touched']\\\">Las contrase침as deben coincidir</div>\\n          </div>\\n  \\n        </ion-list>\\n        <div style=\\\"text-align: center;\\\">\\n          <ion-button color=\\\"violet\\\" full type=\\\"submit\\\" [disabled]=\\\"!form_password.valid\\\">Restablecer contrase침a</ion-button>\\n        </div>\\n      </form>\\n\\n    </div>\\n\\n  </div>\\n\\n\\n</ion-content>\\n\";"]}