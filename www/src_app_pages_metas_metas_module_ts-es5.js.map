{"version":3,"sources":["webpack:///src/app/pages/metas/metas-routing.module.ts","webpack:///src/app/pages/metas/metas.module.ts","webpack:///src/app/pages/metas/metas.page.ts","webpack:///src/app/pages/metas/metas.page.scss","webpack:///src/app/pages/metas/metas.page.html"],"names":["routes","path","component","MetasPage","MetasPageRoutingModule","NgModule","imports","RouterModule","exports","MetasPageModule","CommonModule","FormsModule","IonicModule","declarations","navCtrl","_comunic","_sqlite","_notification","_socket","listMetas","Array","userData","userDataJson","localStorage","getItem","JSON","parse","console","log","e","getMetas","updateArray","fecha","format","getHistorialPromotion","then","metas","forEach","element","push","err","itemComunicacion","subscribe","notificaciones","name","item","event","marcarComoLeida","funciones","obtenerPromocionesPorUsuario","Promise","resolve","reject","getPromotionRead","email","promociones_user","obtienePromocionesNoLeidas","promocionesUsuario","promociones","promocionesNoLeidas","contador","i","findPromocion","findIndex","o","promotion_id","length","registraPromocionesNoLeidas","modelMeta","id_user","id","photo","date_photo","seen","date_seen","created_at","postMarcarComoLeidaMeta","promocion_registrada","promociones_no_leidas","registra_promociones_no_leidas","meta","NavController","ComunicacionComponentService","SqliteServiceService","NotificacionesService","SocketServiceService","Component","selector","template"],"mappings":"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","file":"src_app_pages_metas_metas_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MetasPage } from './metas.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MetasPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MetasPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MetasPageRoutingModule } from './metas-routing.module';\n\nimport { MetasPage } from './metas.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MetasPageRoutingModule\n  ],\n  declarations: [MetasPage]\n})\nexport class MetasPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ComunicacionComponentService } from 'src/app/services/comunicacion-component.service';\nimport { NotificacionesService } from 'src/app/services/notificaciones.service';\nimport { SocketServiceService } from 'src/app/services/socket-service.service';\nimport { SqliteServiceService } from 'src/app/services/sqlite-service.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-metas',\n  templateUrl: './metas.page.html',\n  styleUrls: ['./metas.page.scss'],\n})\nexport class MetasPage implements OnInit {\n\n \n\n  \n  listMetas = new Array();\n  userData = null;\n  constructor(public navCtrl: NavController,\n    \n    private _comunic: ComunicacionComponentService,\n    private _sqlite: SqliteServiceService,\n    private _notification: NotificacionesService,\n    private _socket: SocketServiceService) {\n\n      \n     \n    try{\n\n      let userDataJson = localStorage.getItem('userData'); \n      this.userData = JSON.parse(userDataJson);\n      console.log('userDataMetas: ',this.userData);\n\n    }catch(e){\n\n      \n\n    }  \n    this.getMetas();\n    this.updateArray();\n  }\n\n\n  changeDate(fecha){\n    return moment(fecha).format('YYYY-MM-DD HH:mm:ss');\n   }\n \n   ngOnInit() {\n  }\n\n\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad MetasPage');\n  }\n\n\n  getMetas() {\n\n\n    this._notification.getHistorialPromotion().then((metas: any) => {\n\n\n      console.log('capacitasion: ', metas);\n\n      metas.forEach(element => {\n\n        this.listMetas.push(element);\n      });\n\n      // this.evaluaYMarcaComoLeido(metas);\n\n\n      console.log('getHistorialMessageMetas ', metas);\n\n    }, err => {\n      //historial desde sqlite\n\n\n    })\n\n\n\n  }\n\n\n  updateArray() {\n    this._comunic.itemComunicacion.subscribe((notificaciones) => {\n\n      if (notificaciones.name === 'new-notification') {\n        if (notificaciones.item.event === 'promocion') {\n          this.marcarComoLeida(notificaciones.item);\n          this.listMetas.push(notificaciones.item);\n        }\n      }\n    })\n  }\n\n\nasync  evaluaYMarcaComoLeido(metas){\n    let funciones={\n      obtenerPromocionesPorUsuario:()=>{\n        return new Promise(async(resolve,reject)=>{\n            let promociones_user= await this._notification.getPromotionRead(this.userData[0].email);\n\n            resolve(promociones_user);\n        })\n      },\n      obtienePromocionesNoLeidas:(promocionesUsuario, promociones)=>{\n        return new Promise(async(resolve,reject)=>{\n\n\n          let promocionesNoLeidas= new Array();\n          let contador=0;\n          for(let i=0; i<promociones.length;i++){\n              let findPromocion = promocionesUsuario.findIndex((o)=> o.promotion_id == promociones[i].promotion_id)\n\n              if(findPromocion==-1){\n                promocionesNoLeidas.push(promociones[i]);\n              }\n\n              contador = contador+1;\n\n              if(contador==promociones.length){\n                resolve(promocionesNoLeidas);\n              }\n          }\n\n\n\n\n        })\n      },\n      registraPromocionesNoLeidas:(promociones)=>{\n        return new Promise(async(resolve,reject)=>{\n\n          console.log('promociones-no-leidas: ',promociones);\n          let contador =0;\n          for(let i=0;i<promociones.length;i++){\n            let modelMeta = {\n\n\n              promotion_id: promociones[i].promotion_id,\n              id_user: this.userData[0].id,\n              photo: null,\n              date_photo: null,\n              seen: true,\n              date_seen: null,\n              created_at: moment().format('YYYY-MM-DD HH:mm')\n        \n            }\n        \n            let promocion_registrada = await this._notification.postMarcarComoLeidaMeta(modelMeta);\n            contador = contador+1;\n            if(contador==promociones.length){\n              resolve(true);\n            }\n          }\n\n        })\n      }\n    }\n\n\n    let  promociones = await  funciones.obtenerPromocionesPorUsuario();\n    let  promociones_no_leidas = await funciones.obtienePromocionesNoLeidas(promociones,metas);\n    let  registra_promociones_no_leidas = await funciones.registraPromocionesNoLeidas(promociones_no_leidas);\n\n\n\n\n\n\n\n\n\n\n  }\n\n\n\n  marcarComoLeida(meta) {\n      console.log('meta_marca_como_leido: ',meta);\n    let modelMeta = {\n\n\n      promotion_id: meta.promotion_id,\n      id_user: this.userData[0].id,\n      photo: null,\n      date_photo: null,\n      seen: true,\n      date_seen: null,\n      created_at: moment().format('YYYY-MM-DD HH:mm')\n\n    }\n\n    this._notification.postMarcarComoLeidaMeta(modelMeta);\n  }\n\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtZXRhcy5wYWdlLnNjc3MifQ== */\";","export default \"<!--\\n  Generated template for the MetasPage page.\\n\\n  See http://ionicframework.com/docs/components/#navigation for more info on\\n  Ionic pages and navigation.\\n-->\\n\\n\\n<ion-header no-border>\\n  <ion-toolbar color='violet'>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button auto-hide=\\\"false\\\" ></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Metas</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n\\n\\n\\n\\n  <ion-list *ngFor=\\\"let promocion of listMetas\\\">\\n\\n      <ion-grid>\\n          <ion-row>\\n        \\n            <ion-col col-12>\\n  \\n              <h4 style=\\\"color:#455A64\\\">\\n                {{promocion?.title}}<br/>\\n  \\n              </h4>\\n              <ion-note>\\n                  {{changeDate(promocion?.created_at)}}<br/>\\n                  {{promocion?.user_created}}\\n                </ion-note>\\n              <p>{{promocion?.message}}</p><br/>\\n  \\n            \\n            </ion-col>\\n    \\n          </ion-row>\\n        </ion-grid>\\n\\n\\n\\n  </ion-list>\\n\\n</ion-content>\";"]}