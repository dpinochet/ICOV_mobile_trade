{"version":3,"sources":["webpack:///src/app/pages/compose-tweet/compose-tweet-routing.module.ts","webpack:///src/app/pages/compose-tweet/compose-tweet.module.ts","webpack:///src/app/pages/compose-tweet/compose-tweet.page.ts","webpack:///src/app/pages/compose-tweet/compose-tweet.page.scss","webpack:///src/app/pages/compose-tweet/compose-tweet.page.html"],"names":["routes","path","component","ComposeTweetPage","ComposeTweetPageRoutingModule","NgModule","imports","RouterModule","exports","ComposeTweetPageModule","CommonModule","FormsModule","IonicModule","declarations","navCtrl","twitterProvider","loadingCtrl","toastCtrl","alertCtrl","camera","_base64","_domSanitizer","imagen","composeTweetFormGroup","FormGroup","text","FormControl","Validators","media","console","log","loading","create","message","present","getPicture","saveToPhotoAlbum","targetWidth","targetHeight","quality","allowEdit","encodingType","EncodingType","PNG","sourceType","PictureSourceType","CAMERA","destinationType","DestinationType","DATA_URL","correctOrientation","then","imageData","img","bypassSecurityTrustUrl","controls","setValue","dismiss","header","buttons","alert","pop","NavController","TwitterConectionServiceService","LoadingController","ToastController","AlertController","Camera","Base64","DomSanitizer","Component","selector","template"],"mappings":"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","file":"src_app_pages_compose-tweet_compose-tweet_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ComposeTweetPage } from './compose-tweet.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComposeTweetPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComposeTweetPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComposeTweetPageRoutingModule } from './compose-tweet-routing.module';\n\nimport { ComposeTweetPage } from './compose-tweet.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComposeTweetPageRoutingModule\n  ],\n  declarations: [ComposeTweetPage]\n})\nexport class ComposeTweetPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {  NavController, LoadingController, ToastController, AlertController } from '@ionic/angular';\n//import { TwitterConectionServiceProvider } from '../../providers/twitter-conection-service/twitter-conection-service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Camera } from '@ionic-native/camera/ngx';\n//import { Base64 } from '@ionic-native/base64';\nimport { Base64 } from '@ionic-native/base64/ngx';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport { TwitterConectionServiceService } from 'src/app/services/twitter-conection-service.service';\n\n@Component({\n  selector: 'app-compose-tweet',\n  templateUrl: './compose-tweet.page.html',\n  styleUrls: ['./compose-tweet.page.scss'],\n})\nexport class ComposeTweetPage implements OnInit {\n\n  constructor(public navCtrl: NavController,private twitterProvider: TwitterConectionServiceService,\n    private loadingCtrl: LoadingController,private toastCtrl: ToastController,private alertCtrl: AlertController,\n    private camera: Camera,private _base64:Base64,\n    private _domSanitizer:DomSanitizer\n    ) {\n  }\n\n  ngOnInit() {\n  }\n\n  loading: any;\n  imagen=null;\n  composeTweetFormGroup = new FormGroup({\n    text:new FormControl(null,[Validators.required]),\n    media:new FormControl(null)\n  })\n  \n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ComposeTweetPage');\n  }\n\n  private showLoading() {\n    this.loading = this.loadingCtrl.create({\n     // content: 'Please wait...'\n      message:'Please wait...'\n    });\n    this.loading.present();\n  }\n\n\n  registrarImagen(){\n    this.camera.getPicture(\n      \n      \n      {\n      saveToPhotoAlbum: false,\n      targetWidth: 800,\n      targetHeight: 320,\n      quality: 100,\n      allowEdit: false,\n      encodingType: this.camera.EncodingType.PNG,\n      sourceType: this.camera.PictureSourceType.CAMERA,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      correctOrientation:true\n    }\n    \n    \n    ).then(async (imageData) => {\n      let img = imageData;\n      this.imagen =\"data:image/jpg;base64,\" +imageData;\n      console.log('image.obtenida-no-sanitizada: ',img);\n      console.log('image.obtenida-sanitizada:',this._domSanitizer.bypassSecurityTrustUrl(img));\n      this.composeTweetFormGroup.controls.media.setValue(img);\n      // this._base64.encodeFile(img).then((base64File: string) => {\n      //   this.composeTweetFormGroup.controls.media.setValue(base64File);\n      //   console.log('base64file: ',base64File);\n      // }, (err) => {\n      //   console.log(err);\n      // });\n      // this.composeTweetFormGroup.controls.media.setValue(img);\n    })\n\n  }\n \n\n\n  // public postTweet() {\n  //   this.showLoading();\n  //   this.twitterProvider.postTweet(this.composeTweetFormGroup.value.text,this.composeTweetFormGroup.value.media).then(async(res:any) => {\n  //     console.log('postTweet_chuerning: ',res.json());\n  //     console.log('postTweet_muerning: ',res);\n  //     let respuesta =res.json();\n  //     let respuesta__ = JSON.parse(res._body);\n  //     let media_id_parse = parseInt(respuesta__.media_id_string);\n  //     console.log('media_id_parse: ',media_id_parse);\n  //     console.log('postTwwet_respuesta__',respuesta__);\n  //     this.twitterProvider.postUmagen(this.composeTweetFormGroup.value.text,respuesta__.media_id_string).then(async(restwo)=>{\n\n\n  //       console.log('response_post_tweet1: ',res.json());\n  //       console.log('response_post_tweet2: ',restwo);\n  //       this.loading.dismiss();\n  //       let toast = this.toastCtrl.create({\n  //         message: 'Tweet posted!',\n  //         duration: 3000\n  //       });\n  //       await toast.present();\n  //       this.close();\n  //     }, err => {\n  //       this.showError(err);\n  //     });\n  //     })\n  // }\n\n\n  async  showError(text) {\n    this.loading.dismiss();\n    let alert = await this.alertCtrl.create({\n      header: 'Error',\n      message: text,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  close(){\n    this.navCtrl.pop();\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21wb3NlLXR3ZWV0LnBhZ2Uuc2NzcyJ9 */\";","export default \"<!--\\n  Generated template for the ComposeTweetPage page.\\n\\n  See http://ionicframework.com/docs/components/#navigation for more info on\\n  Ionic pages and navigation.\\n-->\\n<ion-header color='primary' no-border>\\n\\n  <ion-navbar color='primary'>\\n    <ion-title>Registrar Tweet</ion-title>\\n\\n  </ion-navbar>\\n  <!-- <button ion-button item-end outline (click)=\\\"postTweet()\\\">\\n    Registrar\\n  </button> -->\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-card>\\n\\n    <!-- <ion-item>\\n          <ion-avatar item-left>\\n            <img src=\\\"{{tweet.user.profile_image_url}}\\\">\\n          </ion-avatar>\\n          <h2>{{tweet.user.name}}</h2>\\n          <p>{{dateForTweet(tweet.created_at)}}</p>\\n        </ion-item> -->\\n\\n    <img src=\\\"{{imagen}}\\\" *ngIf=\\\"imagen!=null\\\">\\n\\n    <ion-card-content>\\n      <form [formGroup]=\\\"composeTweetFormGroup\\\">\\n        <ion-item>\\n          <ion-label floating>Tweet</ion-label>\\n          <ion-textarea formControlName=\\\"text\\\" type=\\\"text\\\"></ion-textarea>\\n        </ion-item>\\n\\n        <!-- <ion-item>\\n                  <ion-label floating>Imagen</ion-label>\\n                  <ion-input type=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label floating>Url</ion-label>\\n                    <ion-input type=\\\"text\\\"></ion-input>\\n                  </ion-item> -->\\n        <!-- <p>{{tweet.text}}</p> -->\\n      </form>\\n    </ion-card-content>\\n\\n    <ion-row>\\n      <ion-col col-9>\\n        <button ion-button clear small (click)=\\\"postTweet()\\\">\\n          <!-- <ion-icon name=\\\"open\\\"></ion-icon> -->\\n          <div>Registrar Tweet</div>\\n        </button>\\n      </ion-col>\\n      <ion-col col-3>\\n        <button ion-button clear item-end icon-start (click)=\\\"registrarImagen()\\\">\\n          <ion-icon name=\\\"camera\\\"></ion-icon>\\n\\n        </button>\\n\\n      </ion-col>\\n    </ion-row>\\n\\n  </ion-card>\\n</ion-content>\\n\";"]}