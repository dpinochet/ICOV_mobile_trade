{"version":3,"sources":["webpack:///src/app/pages/timeline/timeline-routing.module.ts","webpack:///src/app/pages/timeline/timeline.module.ts","webpack:///src/app/pages/timeline/timeline.page.ts","webpack:///src/app/pages/timeline/timeline.page.scss","webpack:///src/app/pages/timeline/timeline.page.html"],"names":["routes","path","component","TimelinePage","TimelinePageRoutingModule","NgModule","imports","RouterModule","exports","TimelinePageModule","CommonModule","FormsModule","IonicModule","declarations","Component","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,4CAAAC;AAFb,OADqB,CAAvB;;UAWaC,0BAAyB;AAAA;AAAA,Q;;AAAzBA,gCAAyB,uDAJrC,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAIqC,GAAzBH,0BAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAK,mBAAkB;AAAA;AAAA,Q;;AAAlBA,yBAAkB,uDAT9B,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,sDAAAR,yBAJO,CADD;AAORS,oBAAY,EAAE,CAAC,4CAAAV,YAAD;AAPN,OAAT,CAS8B,GAAlBM,mBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCXAN,aAAY;AAUvB;AAAA;AAOC;;AAjBsB;AAAA;AAAA,iBAIvB,oBAAW,CACV;AALsB;AAAA;AAAA,iBAmBvB,4BAAmB,CACjB;AACD;AArBsB;;AAAA;AAAA,S;;;;;;AAAZA,mBAAY,uDALxB,+CAAAW,SAAA,EAAU;AACTC,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR,sEAFS;;AAAA,OAAV,CAKwB,GAAZb,aAAY,CAAZ;;;;;;;;;;;;;;;ACRb;;;AAAA,uCAAe,qKAAf;;;;;;;;;;;;;;;ACAA;;;AAAA,uCAAe,q6CAAf","file":"src_app_pages_timeline_timeline_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TimelinePage } from './timeline.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TimelinePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TimelinePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TimelinePageRoutingModule } from './timeline-routing.module';\n\nimport { TimelinePage } from './timeline.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TimelinePageRoutingModule\n  ],\n  declarations: [TimelinePage]\n})\nexport class TimelinePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.page.html',\n  styleUrls: ['./timeline.page.scss'],\n})\nexport class TimelinePage implements OnInit {\n\n\n\n  ngOnInit() {\n  }\n\n  tweets: Observable<any[]>;\n  loading: any;\n \n  constructor(\n    // public navCtrl: NavController, private twitterProvider: TwitterConectionServiceProvider, private alertCtrl: AlertController, \n    // private loadingCtrl: LoadingController, private toastCtrl: ToastController,\n    // private iab: InAppBrowser\n    // ,private browserTab: BrowserTab\n    \n    ) {\n  }\n \n  ionViewWillEnter() {\n    // this.loadTimeline();\n  }\n \n  // public async loadTimeline(refresher?) {\n  //   // await this.showLoading();\n  //   this.tweets = this.twitterProvider.getHomeTimeline();\n  //   this.tweets.subscribe(async(data) => {\n  //    await this.loading.dismiss();\n  //    try{\n  //      refresher.complete();\n\n  //    }catch(e){}\n  //   }, err => {\n  //     try{\n\n  //       refresher.complete();\n  //       this.showError(err);\n\n  //     }catch(e){}\n  //   });\n  // }\n  // public composeTweet() {\n  //   // let prompt = this.alertCtrl.create({\n  //   //   title: 'New Tweet',\n  //   //   message: \"Write your Tweet message below\",\n  //   //   inputs: [\n  //   //     {\n  //   //       name: 'text'\n  //   //     },\n  //   //   ],\n  //   //   buttons: [\n  //   //     {\n  //   //       text: 'Cancel'\n  //   //     },\n  //   //     {\n  //   //       text: 'Tweet',\n  //   //       handler: data => {\n  //   //         this.postTweet(data.text);\n  //   //       }\n  //   //     }\n  //   //   ]\n  //   // });\n  //   // prompt.present();\n\n  //   this.navCtrl.push(ComposeTweetPage);\n  // }\n\n\n\n\n  // public dateForTweet(dateString) {\n  //   let d = new Date(Date.parse(dateString));\n \n  //   // http://stackoverflow.com/questions/3552461/how-to-format-a-javascript-date\n  //   var datestring = (\"0\" + d.getDate()).slice(-2) + \"-\" + (\"0\" + (d.getMonth() + 1)).slice(-2) + \"-\" +\n  //     d.getFullYear() + \" \" + (\"0\" + d.getHours()).slice(-2) + \":\" + (\"0\" + d.getMinutes()).slice(-2);\n \n  //   return datestring;\n  // }\n \n  // public openLinkUrl(url) {\n  //   let browser = this.iab.create(url, 'blank');\n  //   // this.browserTab.isAvailable()\n  //   // .then(isAvailable => {\n  //   //   if (isAvailable) {\n  //   //     this.browserTab.openUrl(url);\n  //   //   } else {\n  //   //     // open URL with InAppBrowser instead or SafariViewController\n  //   //   }\n  //   // });\n  // }\n \n  // public postTweet(text) {\n  //   this.showLoading();\n  //   this.twitterProvider.postTweet(text).subscribe(res => {\n  //     this.loading.dismiss();\n  //     let toast = this.toastCtrl.create({\n  //       message: 'Tweet posted!',\n  //       duration: 3000\n  //     });\n  //     toast.present();\n  //   }, err => {\n  //     this.showError(err);\n  //   });\n  // }\n  // private showLoading() {\n  //   this.loading = this.loadingCtrl.create({\n  //     content: 'Please wait...'\n  //   });\n  //   return this.loading.present();\n  // }\n \n  // private showError(text) {\n  //   this.loading.dismiss();\n  //   let alert = this.alertCtrl.create({\n  //     title: 'Error',\n  //     message: text,\n  //     buttons: ['OK']\n  //   });\n  //   alert.present();\n  // }\n\n  // goBack() {\n  //   this.navCtrl.canGoBack();\n  //   // this._comunc.addItem({ name: 'low-stock-count', itemAdd: { count: this.baja_stock_info_count } });\n\n  // }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0aW1lbGluZS5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-navbar color=\\\"primary\\\">\\n    <!-- <ion-buttons start>\\n      <button ion-button icon-only (click)=\\\"goBack()\\\">\\n        <ion-icon name=\\\"close\\\"></ion-icon>\\n      </button>\\n    </ion-buttons>\\n     -->\\n    <ion-title>\\n      My Feed\\n    </ion-title>\\n    <ion-buttons end>\\n      <button ion-button icon-only (click)=\\\"composeTweet()\\\">\\n        <ion-icon name=\\\"create\\\"></ion-icon>\\n      </button>\\n    </ion-buttons>\\n  </ion-navbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"loadTimeline($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-card *ngFor=\\\"let tweet of tweets | async\\\">\\n\\n    <ion-item>\\n      <ion-avatar item-left>\\n        <img src=\\\"{{tweet.user.profile_image_url}}\\\">\\n      </ion-avatar>\\n      <h2>{{tweet.user.name}}</h2>\\n      <p>{{dateForTweet(tweet.created_at)}}</p>\\n    </ion-item>\\n\\n    <img src=\\\"{{tweet.extended_entities.media[0].media_url}}\\\" *ngIf=\\\"tweet.extended_entities\\\">\\n\\n    <ion-card-content>\\n      <p>{{tweet.text}}</p>\\n    </ion-card-content>\\n\\n    <ion-row>\\n      <ion-col *ngIf=\\\"tweet.entities.urls.length > 0\\\">\\n        <button ion-button clear small (click)=\\\"openLinkUrl(tweet.entities.urls[0].url)\\\">\\n          <ion-icon name=\\\"open\\\"></ion-icon>\\n          <div>Open Link</div>\\n        </button>\\n      </ion-col>\\n    </ion-row>\\n\\n  </ion-card>\\n\\n</ion-content>\\n\";"]}