{"version":3,"sources":["./src/app/pages/reset-password/reset-password-routing.module.ts","./src/app/pages/reset-password/reset-password.module.ts","./src/app/pages/reset-password/reset-password.page.ts","./src/app/pages/reset-password/reset-password.page.scss","./src/app/pages/reset-password/reset-password.page.html"],"names":[],"mappings":"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","file":"src_app_pages_reset-password_reset-password_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { NgxErrorsModule } from '@hackages/ngxerrors';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule,\n    ReactiveFormsModule,\n    NgxErrorsModule\n    \n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { UserServicesService } from 'src/app/services/user-services.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit {\n\n\n\n  ngOnInit() {\n  }\n\n  form: FormGroup;\n  form_password: FormGroup;\n  user_token: string = 'null';\n  user_uid: string = 'null';\n\n  constructor(public navCtrl: NavController,\n    private userService: UserServicesService,\n    fb: FormBuilder,\n    public toastCtrl: ToastController,\n    private route :Router\n\n  ) {\n\n\n    this.form_password = fb.group({\n      // email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(8)])],\n      confirmPass: ['', Validators.compose([Validators.required, Validators.minLength(8)])]\n    }, { validator: this.checkIfMatchingPasswords('password', 'confirmPass') });\n\n    this.form = fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n    }, );\n  }\n\n  checkIfMatchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordKey],\n        passwordConfirmationInput = group.controls[passwordConfirmationKey];\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        return passwordConfirmationInput.setErrors({ notEquivalent: true })\n      }\n      else {\n        return passwordConfirmationInput.setErrors(null);\n      }\n    }\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ResetPasswordPage');\n  }\n\n  resetPassword() {\n    let form = this.form.value;\n    let form_data = new FormData;\n    form_data.append('email', form.email);\n\n    this.userService.reset_password(form_data).subscribe(\n      data => {\n        /*let toast = this.toastCtrl.create({\n          message: 'Tu email es válido, cambia tu contraseña',\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        });\n        toast.present();*/\n        this.tostFound('Tu correo es válido, cambia tu contraseña');\n        this.user_token = data.token;\n        this.user_uid = data.uid;\n\n      },\n      error => {\n       /* let toast = this.toastCtrl.create({\n          message: 'Tu email es no se encuentra registrado',\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        });\n        toast.present();*/\n        this.tostFound('Tu correo es no se encuentra registrado');\n        console.log(error);\n      }\n    )\n  }\n\n  confirmPassword() {\n    let uid = this.user_uid;\n    let token = this.user_token;\n\n    let form = this.form_password.value;\n    let form_data = new FormData;\n    form_data.append('new_password1', form.password);\n    form_data.append('new_password2', form.confirmPass);\n    form_data.append('token', token);\n    form_data.append('uid', uid);\n    // form_data.append('email', form.email);\n\n    this.userService.confirm_password(form_data, uid, token).subscribe(\n      data => {\n        /*let toast = this.toastCtrl.create({\n          message: 'Has cambiado correctamente tu contraseña!',\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        });\n        toast.present();*/\n        this.tostFound('¡Has cambiado correctamente tu contraseña!');\n        //this.navCtrl.push(LoginPage);\n        this.route.navigateByUrl('login');\n      },\n      error => {\n        /*let toast = this.toastCtrl.create({\n          message: error.new_password2,\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        });\n        toast.present();*/\n        this.tostFound(error.new_password2);\n        console.log(JSON.stringify(error));\n      }\n    )\n\n  }\n\n  async tostFound(msg)\n  {\n    let toast = await this.toastCtrl.create({\n      message:msg,\n      buttons: [\n         {\n          text: 'OK',\n          role: 'OK',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        }\n      ]\n    });\n    await toast.present();\n  }\n\n\n\n}\n","export default \"page-reset-password .reset_pass_img {\\n  position: relative;\\n  left: 29%;\\n}\\npage-reset-password img {\\n  height: 170px;\\n  width: 170px;\\n}\\npage-reset-password button {\\n  margin-top: 24px;\\n  margin-bottom: 8px;\\n}\\npage-reset-password a {\\n  margin: 8px;\\n  text-decoration: none;\\n}\\npage-reset-password p {\\n  color: #337ab7;\\n  margin: 8px;\\n}\\npage-reset-password label {\\n  display: block;\\n}\\npage-reset-password #hereSpan {\\n  color: #FF6702;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2V0LXBhc3N3b3JkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNFLGtCQUFBO0VBQ0EsU0FBQTtBQUROO0FBS0k7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUhSO0FBS0k7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0FBSFI7QUFVSTtFQUNJLFdBQUE7RUFDQSxxQkFBQTtBQVJSO0FBVUk7RUFDSSxjQUFBO0VBQ0EsV0FBQTtBQVJSO0FBV0k7RUFDSSxjQUFBO0FBVFI7QUFXSTtFQUNJLGNBQUE7QUFUUiIsImZpbGUiOiJyZXNldC1wYXNzd29yZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwYWdlLXJlc2V0LXBhc3N3b3JkIHtcblxuICAgIC5yZXNldF9wYXNzX2ltZ3tcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGxlZnQ6MjklXG4gICAgfVxuICBcbiAgXG4gICAgaW1nIHtcbiAgICAgICAgaGVpZ2h0OiAxNzBweDtcbiAgICAgICAgd2lkdGg6IDE3MHB4O1xuICAgIH1cbiAgICBidXR0b24ge1xuICAgICAgICBtYXJnaW4tdG9wOiAyNHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgfVxuICAgIGlvbi1pY29uIHtcbiAgICAgICAgLy8gZm9udC1zaXplOiAyLjVlbTtcbiAgICAgICAgLy8gbWFyZ2luLXRvcDogOHB4O1xuICAgICAgICAvLyBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgfVxuICAgIGEge1xuICAgICAgICBtYXJnaW46IDhweDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbiAgICBwIHtcbiAgICAgICAgY29sb3I6ICMzMzdhYjc7XG4gICAgICAgIG1hcmdpbjogOHB4O1xuICBcbiAgICB9XG4gICAgbGFiZWwge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgI2hlcmVTcGFuIHtcbiAgICAgICAgY29sb3I6ICNGRjY3MDI7XG4gICAgfVxuICB9XG4gICJdfQ== */\";","export default \"<!--\\n  Generated template for the ResetPasswordPage page.\\n\\n  See http://ionicframework.com/docs/components/#navigation for more info on\\n  Ionic pages and navigation.\\n-->\\n\\n\\n<ion-header no-border>\\n  <ion-toolbar color='violet'>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Recuperar contraseña</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  \\n  <!-- <ion-content padding id=\\\"loginCont\\\"> -->\\n  <!-- <img src=\\\"assets/imgs/RedReparto512.png\\\" alt=\\\"\\\" class=\\\"reset_pass_img\\\"> -->\\n\\n  <!-- <ion-card-header color=\\\"primary\\\">Trade App</ion-card-header/> -->\\n  <!-- <p>TOKEN: {{user_token}}</p> -->\\n  <div *ngIf=\\\"user_token == 'null'\\\">\\n    <div style=\\\"text-align: center;\\\">\\n        <img  src=\\\"../../../assets/imgs/trade.png\\\" alt=\\\"\\\" >\\n        <br/><br/><br/><br/><br/>\\n      <form (ngSubmit)=\\\"resetPassword()\\\" [formGroup]=\\\"form\\\">\\n        <ion-list>\\n          <ion-item>\\n            <ion-label floating color=\\\"primary\\\">\\n              <ion-icon color=\\\"violet\\\" name=\\\"mail\\\"></ion-icon> Correo\\n            </ion-label>\\n            <ion-input type=\\\"email\\\" name=\\\"email\\\" required maxlength=\\\"50\\\" formControlName=\\\"email\\\"></ion-input>\\n          </ion-item>\\n        </ion-list>\\n        <div style=\\\"text-align: center;\\\">\\n          <ion-button color=\\\"violet\\\" full type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Comprobar Correo</ion-button>\\n        </div>\\n      </form>\\n      \\n    </div>\\n \\n  </div>\\n\\n  <div *ngIf=\\\"user_token != 'null'\\\">\\n    <div center>\\n      <form (ngSubmit)=\\\"confirmPassword()\\\" [formGroup]=\\\"form_password\\\">\\n        <ion-list>\\n  \\n          <!-- Pass input -->\\n          <ion-item [ngClass]=\\\"{ invalid: passwordErrors.hasError('*', ['touched']) }\\\">\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n            <ion-label floating color=\\\"primary\\\" style=\\\"font-size: 14px;\\\">\\n              <ion-icon color=\\\"violet\\\" name=\\\"finger-print\\\"></ion-icon> Contraseña\\n            </ion-label>\\n          </ion-item>\\n          <div ngxErrors=\\\"password\\\" #passwordErrors=\\\"ngxErrors\\\">\\n            <div [ngxError]=\\\"['minlength', 'required']\\\" [when]=\\\"['touched']\\\">Debe contener mínimo 6 carácteres</div>\\n          </div>\\n  \\n          <!-- Pass confirm input -->\\n          <ion-item [ngClass]=\\\"{ invalid: confirmPassErrors.hasError('*', ['touched']) }\\\">\\n            <ion-input type=\\\"password\\\" formControlName=\\\"confirmPass\\\"></ion-input>\\n            <ion-label floating color=\\\"primary\\\" style=\\\"font-size: 14px;\\\">\\n              <ion-icon color=\\\"violet\\\" name=\\\"finger-print\\\"></ion-icon> Confirmación Contraseña\\n            </ion-label>\\n          </ion-item>\\n          <div ngxErrors=\\\"confirmPass\\\" #confirmPassErrors=\\\"ngxErrors\\\">\\n            <div [ngxError]=\\\"['notEquivalent']\\\" [when]=\\\"['touched']\\\">Las contraseñas deben coincidir</div>\\n          </div>\\n  \\n        </ion-list>\\n        <div style=\\\"text-align: center;\\\">\\n          <ion-button color=\\\"violet\\\" full type=\\\"submit\\\" [disabled]=\\\"!form_password.valid\\\">Restablecer contraseña</ion-button>\\n        </div>\\n      </form>\\n\\n    </div>\\n\\n  </div>\\n\\n\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}