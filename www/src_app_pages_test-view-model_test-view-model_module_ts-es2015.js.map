{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/operators/groupBy.js","./node_modules/rxjs/_esm2015/internal/operators/reduce.js","./node_modules/rxjs/_esm2015/internal/operators/toArray.js","./src/app/pages/test-view-model/test-view-model-routing.module.ts","./src/app/pages/test-view-model/test-view-model.module.ts","./src/app/pages/test-view-model/test-view-model.page.ts","./src/app/pages/test-view-model/test-view-model.page.scss","./src/app/pages/test-view-model/test-view-model.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACI;AACJ;AACN;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,6CAAO;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACO,gCAAgC,mDAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uDAAY;AAC7C,eAAe,qCAAqC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uDAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;;;;;;;ACnK8B;AACQ;AACY;AACd;AAC7B;AACP;AACA;AACA,mBAAmB,gDAAI,CAAC,2CAAI,qBAAqB,mDAAQ,KAAK,+DAAc;AAC5E;AACA;AACA;AACA,eAAe,gDAAI,CAAC,2CAAI,6DAA6D,mDAAQ;AAC7F;AACA;AACA,kC;;;;;;;;;;;;;;;;ACdkC;AAClC;AACA;AACA;AACA;AACA;AACA;AAC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","file":"src_app_pages_test-view-model_test-view-model_module_ts-es2015.js","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return (source) => source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nclass GroupByOperator {\n    constructor(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    }\n}\nclass GroupBySubscriber extends Subscriber {\n    constructor(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    _next(value) {\n        let key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    }\n    _group(value, key) {\n        let groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        let group = groups.get(key);\n        let element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            const groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                let duration;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    }\n    _error(err) {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    }\n    removeGroup(key) {\n        this.groups.delete(key);\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                super.unsubscribe();\n            }\n        }\n    }\n}\nclass GroupDurationSubscriber extends Subscriber {\n    constructor(key, group, parent) {\n        super(group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    _next(value) {\n        this.complete();\n    }\n    _unsubscribe() {\n        const { parent, key } = this;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    }\n}\nexport class GroupedObservable extends Observable {\n    constructor(key, groupSubject, refCountSubscription) {\n        super();\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    _subscribe(subscriber) {\n        const subscription = new Subscription();\n        const { refCountSubscription, groupSubject } = this;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    }\n}\nclass InnerRefCountSubscription extends Subscription {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        parent.count++;\n    }\n    unsubscribe() {\n        const parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            super.unsubscribe();\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=groupBy.js.map","import { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan((acc, value, index) => accumulator(acc, value, index + 1)), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map","import { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestViewModelPage } from './test-view-model.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestViewModelPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestViewModelPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestViewModelPageRoutingModule } from './test-view-model-routing.module';\n\nimport { TestViewModelPage } from './test-view-model.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TestViewModelPageRoutingModule,\n    \n  ],\n  declarations: [TestViewModelPage]\n})\nexport class TestViewModelPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { from } from 'rxjs';\nimport { groupBy, mergeMap, toArray } from 'rxjs/operators';\nimport { DeliveryServicesService } from 'src/app/services/delivery-services.service';\nimport { UserServicesService } from 'src/app/services/user-services.service';\nimport { Store } from '../../models/store';\n\n@Component({\n  selector: 'app-test-view-model',\n  templateUrl: './test-view-model.page.html',\n  styleUrls: ['./test-view-model.page.scss'],\n})\nexport class TestViewModelPage implements OnInit {\n\n\n  ngOnInit() {\n  }\n\n  testArray: any = [];\n  public date_start: any = '';\n  private allStores: any = [];\n  public arrayGrouped = [];\n\n  constructor(\n    public navCtrl:   NavController,\n    public userSrvc:  UserServicesService,\n    private delivery:   DeliveryServicesService\n\n  ) { } // End constructor\n\n\n  callSubmit(){this.obtainTrades()}\n\n  obtainTrades() {\n    let date = this.date_start\n    let arraySubsidiaries = [];\n    this.arrayGrouped = [];\n\n    this.delivery.getStoresCatalog().subscribe(\n      data => {\n        const distinct = (value,index, self) => { return self.indexOf(value) === index }\n        this.allStores = data;\n        this.delivery.getVisitsByUserDay(date).subscribe(\n          data => {\n            let trade = data\n            const source = from(trade);\n            const for_group = source.pipe(\n              groupBy( (trade:Store) => trade.id_multistore),\n              mergeMap(group => group.pipe(toArray()))\n            );\n\n            const subscribe = for_group.subscribe(val => {\n              arraySubsidiaries[val[0].id_multistore] = val;\n            });\n            for (let key in arraySubsidiaries) {\n              let store_tmp = this.allStores.find(x=>x.id == key);\n              let unique = [...Array.from(arraySubsidiaries[key].map(item => item.name_business))]\n              unique = unique.filter(distinct)\n              let subsidiary_cont: any = [];\n\n              for (let item in unique) {\n                subsidiary_cont.push(unique[item])\n                for (let subsidiary of arraySubsidiaries[key]) {\n                  if(subsidiary.name_business == unique[item]){ subsidiary_cont[item] =+1 }\n                }\n              }\n              this.arrayGrouped[parseInt(key)-1] = arraySubsidiaries[key]\n              this.arrayGrouped[parseInt(key)-1]['img'] = store_tmp.photo\n              this.arrayGrouped[parseInt(key)-1]['name'] = store_tmp.name\n              this.arrayGrouped[parseInt(key)-1]['trade_number'] = subsidiary_cont\n\n            }\n          },\n          _err => { console.error(_err)}\n        )\n      },\n      _err => {}\n    )\n  }\n\n  pushArray(){\n    this.testArray.push('dasdasda')\n    console.log(this.testArray)\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZXN0LXZpZXctbW9kZWwucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-navbar color='primary'>\\n    <button ion-button menuToggle>\\n      <ion-icon name=\\\"menu\\\"></ion-icon>\\n    </button>\\n    <ion-title>Visitas</ion-title>\\n  </ion-navbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <ion-list>\\n    <!-- <form (ngSubmit)=\\\"callSubmit()\\\" [FormGroup]=\\\"form\\\"> -->\\n    <form (ngSubmit)=\\\"callSubmit()\\\" >\\n      <ion-item>\\n        <ion-label>Fecha inicio</ion-label>\\n        <ion-datetime displayFormat=\\\"DD-MM-YYYY\\\" cancelText=\\\"Cancelar\\\" [(ngModel)]=\\\"date_start\\\"\\n        doneText=\\\"Seleccionar\\\" min=\\\"2018\\\" name=\\\"date_start\\\">\\n        </ion-datetime>\\n      </ion-item>\\n\\n      <div padding-horizontal>\\n        <!-- <div class=\\\"form-error\\\">{{form.errors}}</div> -->\\n        <button ion-button full type=\\\"submit\\\" [disabled]=\\\"date_start == ''\\\">Obtener Reporte</button>\\n      </div>\\n\\n    </form>\\n    <!-- {{ arrayGrouped | json }} -->\\n    <div *ngFor=\\\"let item of arrayGrouped\\\" >\\n      <ul> <b>{{ item.name }} </b></ul>\\n      <ul> <b>{{ item.img }} </b></ul>\\n      <div *ngFor=\\\"let trade of item\\\" >\\n        <ul> {{ item.length }} </ul>\\n        <ul> {{ trade.name_business }} </ul>\\n        <ul> {{ trade.subsidiary_publish__created_at }}</ul>\\n      </div>\\n    </div>\\n  </ion-list>\\n\\n{{ testArray | json}}\\n<button type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"pushArray()\\\">Push Array</button>\\n\\n</ion-content>\\n\\n\";"],"sourceRoot":"webpack:///"}